/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.nationalinsurance.gui;

import com.nationalinsurance.beans.ItemBean;
import com.nationalinsurance.services.DefinationService;
import java.util.ArrayList;

/**
 *
 * @author Ronzeyt
 */
public class ListItemsGUI extends javax.swing.JPanel {
    private CardLayoutInterface cardlayout;
    /**
     * Creates new form ListItemsGUI
     * @param cardlayout
     */
    public ListItemsGUI(CardLayoutInterface cardlayout) {
        initComponents();
        this.cardlayout = cardlayout;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TableTitle = new javax.swing.JLabel();
        ScrollPaneTable = new javax.swing.JScrollPane();
        ListItemTable = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(850, 520));

        TableTitle.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        TableTitle.setText("List of all Defined Items");

        //adding item values in table
        DefinationService service = new DefinationService();
        ItemBean item = new ItemBean();
        ArrayList<ItemBean> itemlist = new ArrayList<>();
        itemlist = service.getItemsList();
        ListItemTable.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        ListItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "SN", "Name", "UID", "Type", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ListItemTable.setFocusable(false);
        ListItemTable.setRowHeight(22);
        ListItemTable.getTableHeader().setReorderingAllowed(false);
        ScrollPaneTable.setViewportView(ListItemTable);
        if (ListItemTable.getColumnModel().getColumnCount() > 0) {
            ListItemTable.getColumnModel().getColumn(0).setResizable(false);
            ListItemTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            ListItemTable.getColumnModel().getColumn(1).setResizable(false);
            ListItemTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            ListItemTable.getColumnModel().getColumn(2).setResizable(false);
            ListItemTable.getColumnModel().getColumn(2).setPreferredWidth(60);
            ListItemTable.getColumnModel().getColumn(3).setResizable(false);
            ListItemTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            ListItemTable.getColumnModel().getColumn(4).setResizable(false);
            ListItemTable.getColumnModel().getColumn(4).setPreferredWidth(120);
        }
        for (int i=0; i<itemlist.size();i++){
            ListItemTable.setValueAt(i+1, i, 0);
            ListItemTable.setValueAt(itemlist.get(i).getName(), i, 1);
            ListItemTable.setValueAt(itemlist.get(i).getUid(), i, 2);
            ListItemTable.setValueAt(itemlist.get(i).getDataType(), i, 3);

            javax.swing.JLabel edit = new javax.swing.JLabel();
            edit.setName("edit");
            javax.swing.JLabel delete = new javax.swing.JLabel("Delete");
            ListItemTable.add(edit);
            ListItemTable.setValueAt(edit, i, 4);

        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TableTitle)
                    .addComponent(ScrollPaneTable, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                .addGap(164, 164, 164))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(TableTitle)
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ListItemTable;
    private javax.swing.JScrollPane ScrollPaneTable;
    private javax.swing.JLabel TableTitle;
    // End of variables declaration//GEN-END:variables
   
}
